@using YSI.CurseOfSilverCrown.Core.ViewModels;
@using YSI.CurseOfSilverCrown.Core.Commands;
@model YSI.CurseOfSilverCrown.Core.Database.Models.Command

@{
    ViewData["Title"] = "Вложение средств в экономику провинции";
    var resourses = ViewBag.Resourses as Dictionary<string, List<int>>;
    var organization = ViewBag.Organization as OrganizationInfo;
}

<h1>Редактирование</h1>

<h4>Вложение средств в экономику провинции</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Type" value="4" />
            <input type="hidden" asp-for="TargetOrganizationId" />
            <div id="сoffers" class="form-group">
                Вложить средства казны в развитие экономики провинции
                <input asp-for="Coffers" class="form-control" type="range" min="0" max="@resourses["Казна"][2]"
                       onchange="onCoffersChanged()" />
                <span id="expectation">
                    Кол-во вкладываемых средств казны: -, ожидаемый прирост налогов: -
                </span>
                <span asp-validation-for="Coffers" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="row">
    <p>
        Вложение средства в экономику провинции - действие позволяющее выполнить инвестиции в провинцию, чтобы собирать больше налогов. Вложения подразумевают постройку дорог и мельниц, налаживание торговли и другое. Инвестиции угасают при перенасыщении, то есть первая тысяча инвестиции окупиться за 2 хода, двадцатая будет окупаться 10 ходов и т.д. В целом вкладывать деньги в инвестиции можно до бесконечности, но с каждым разом они будут всё дольше окупаться.
    </p>
</div>

<div>
    <a asp-action="Index" asp-route-organizationId="@organization.Id">К списку</a>
</div>

<script type="text/javascript">

    window.onload = function () {
        document.getElementById("Coffers").value = @Math.Min(1000, resourses["Казна"][2]);
        onCoffersChanged();
    };

    function onCoffersChanged() {
        let koefStr = '@InvestmentsHelper.GetCoeficient()';
        koefStr = koefStr.replace(',','.')
        let koef = parseFloat(koefStr);

        if (document.getElementById("Coffers").value > @resourses["Казна"][2])
            document.getElementById("Coffers").value =  @resourses["Казна"][2];
        let coffers = parseInt(document.getElementById("Coffers").value);
        let currentInvestment = @resourses["Инвестиции"][2];
        let newInvestment = currentInvestment + coffers;

        let currentProfit = Math.round(Math.sqrt(currentInvestment * koef));
        let newProfit = Math.round(Math.sqrt(newInvestment * koef));
        let additionalProfit = newProfit - currentProfit;

        let additionalProfitMin = Math.floor(additionalProfit / 10.0 * 0.9) * 10;
        let additionalProfitMax = Math.ceil(additionalProfit / 10.0 * 1.1) * 10;

        document.getElementById("expectation").innerText = 'Кол-во вкладываемых средств казны: ' + coffers + ', ожидаемый прирост налогов: ' + additionalProfitMin + ' - ' + additionalProfitMax;
    }

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
