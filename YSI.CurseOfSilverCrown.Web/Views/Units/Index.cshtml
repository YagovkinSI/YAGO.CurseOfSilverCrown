@using YSI.CurseOfSilverCrown.Core.Parameters
@using YSI.CurseOfSilverCrown.Core.ViewModels;
@using YSI.CurseOfSilverCrown.Core.Database.Models;
@using YSI.CurseOfSilverCrown.Core.Database.Models.GameWorld;
@model IEnumerable<Unit>

@{
    ViewData["Title"] = "Список";
    var domain = Model.First().Domain;
    var initiator = Model.First().PersonInitiator;
    var isOwnCommands = domain.Id == initiator.Id;

    var budget = ViewBag.Budget as Budget;
    var lines = budget.Lines;
}

<h1>@domain.Name: Отряды</h1>
<hr />
<h2>Перечень отрядов</h2>

<h3>Отряды</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                Численность
            </th>
            <th>
                Местоположение
            </th>
            <th>
                Приказ
            </th>
            <th>
                Защита (собственная)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var unit in Model)
            {
                var line = lines.Single(l => l.CommandSourceTable == enCommandSourceTable.Units && l.CommandId == unit.Id);
                <tr>
                    <td>
                        @unit.Warriors воинов
                    </td>
                    <td>
                        @unit.Position.Name
                    </td>
                    <td>
                        @line.Descripton
                    </td>
                    @{
                        if (line.Defense?.ExpectedValue != null)
                        {
                            <td>@Math.Round(line.Defense.ExpectedValue.Value, 2)</td>
                        }
                        else
                        {
                            <td>0</td>
                        }
                    }
                    <td>
                        <a asp-action="EditUnit" asp-route-id="@line.CommandId">Редактировать</a>
                    </td>
                </tr>
            }
            var current = lines.Single(c => c.Type == enLineOfBudgetType.Current);
            var total = lines.Single(c => c.Type == enLineOfBudgetType.Total);            
            if (current.Defense.ExpectedValue.Value != 0)
            {
                <tr>
                    <td>Базовая защита собственного замка:</td>
                    <td></td>
                    <td></td>
                    <td>@Math.Round(current.Defense.ExpectedValue.Value, 1)</td>
                    <td></td>
                </tr>
            }                        
            <tr>
                <td>ИТОГОВАЯ СОБСТВЕННАЯ ЗАЩИТА:</td>
                <td></td>
                <td></td>
                <td>@Math.Round(total.Defense.ExpectedValue.Value, 1)</td>
                <td></td>
            </tr>
        }
    </tbody>
</table>



@if (isOwnCommands)
{
    <h3>Ожидаемый результат на начало следующего сезона</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Статья расходов/дохов
                </th>
                <th>
                    Казна
                </th>
                <th>
                    Воины
                </th>
                <th>
                    Имущество владения
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var line in lines)
            {
                if ((line.Coffers?.ExpectedValue == null || line.Coffers.ExpectedValue.Value == 0) &&
                    (line.Warriors?.ExpectedValue == null || line.Warriors.ExpectedValue.Value == 0) &&
                    (line.Investments?.ExpectedValue == null || line.Investments.ExpectedValue.Value == 0) &&
                    line.Type != enLineOfBudgetType.Total &&
                    line.Type != enLineOfBudgetType.Current)
                    continue;
                <tr>
                    <td>
                        @line.Descripton
                    </td>
                    <td>
                        @line.Coffers?.ExpectedValue
                    </td>
                    <td>
                        @line.Warriors?.ExpectedValue
                    </td>
                    <td>
                        @line.Investments?.ExpectedValue
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
